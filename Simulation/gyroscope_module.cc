#include "gyroscope_module.h"

#include <map>
#include <string>
#include <eigen3/Eigen/Dense>

using Eigen::VectorXd;
using Eigen::MatrixXd;

// The outline for this file was autogenerated by create_new_module.py
namespace Simulation {
GyroscopeModule::GyroscopeModule() {
	_module_name = "gyroscope_module";
    _module_period_ms = std::chrono::milliseconds(1);

	_module_data.Add<VectorXd>("W", VectorXd::Zero(3));
	_module_data.Add<double>("t", 0);

    // initialize sensors
    _gyroscope.Init();
}

void GyroscopeModule::Poll(std::shared_ptr<ModuleDataCollection> data) {
	VectorXd W = data->GetModuleData("simulation_module").Get<VectorXd>("W");
	double t = data->GetModuleData("simulation_module").Get<double>("t");

	std::map<std::string, VectorXd> sensor_inputs;
	sensor_inputs["W"] = W;

    // update sensor states
    _gyroscope.UpdateStates(sensor_inputs, _dt_ms/1000);
    _gyroscope.UpdateOutput(sensor_inputs);

	_module_data.Set<VectorXd>("W", W);
	_module_data.Set<double>("t", t);
}

}

