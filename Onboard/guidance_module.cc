#include "guidance_module.h"
#include <math.h>
#include <iostream>
#include <eigen3/Eigen/Dense>

using Eigen::MatrixXd;
using Eigen::VectorXd;

// The outline for this file was autogenerated by create_new_module.py
namespace Onboard {
GuidanceModule::GuidanceModule() {
	_module_name = "guidance_module";
	_module_period_ms = std::chrono::milliseconds(1);

	VectorXd b1d(3);
	b1d << 1, 0, 0;
	_module_data.Add<VectorXd>("xd", VectorXd::Zero(3));
	_module_data.Add<VectorXd>("b1d", b1d);

}

void GuidanceModule::Poll(std::shared_ptr<ModuleDataCollection> data) {
	double t = data->GetModuleData("simulation_module").Get<double>("t");

	VectorXd xd(3);
    xd << 10*cos(2*M_PI*0.1*t), 10*sin(2*M_PI*0.1*t), -10;

	_module_data.Set<VectorXd>("xd", xd);
	_module_data.Set<VectorXd>("b1d", xd);

}

}